{{- if .Values.backup.enabled }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "wordpress.fullname" . }}-backup
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "wordpress.labels" . | nindent 4 }}
    app.kubernetes.io/component: backup
spec:
  schedule: {{ .Values.backup.schedule | quote }}
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      activeDeadlineSeconds: 3600  # Kill job after 1 hour (prevents stuck jobs)
      backoffLimit: 2  # Retry twice then fail
      template:
        metadata:
          labels:
            {{- include "wordpress.selectorLabels" . | nindent 12 }}
            app.kubernetes.io/component: backup
        spec:
          restartPolicy: OnFailure
          serviceAccountName: {{ include "wordpress.serviceAccountName" . }}
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            fsGroup: 1000
            seccompProfile:
              type: RuntimeDefault
          containers:
          - name: wordpress-backup
            image: mariadb:11.1
            imagePullPolicy: IfNotPresent
            securityContext:
              runAsUser: 1000
              runAsGroup: 1000
              runAsNonRoot: true
              readOnlyRootFilesystem: true
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              seccompProfile:
                type: RuntimeDefault
            command:
            - /bin/bash
            - -c
            - |
              set -euo pipefail
              
              # Source backup configuration
              source /etc/backup/backup-config.sh
              
              echo "Starting WordPress backup at $(date)"
              
              # Create backup directory
              mkdir -p "$BACKUP_DIR"
              
              # Database backup with compression and timeout
              echo "Backing up database..."
              timeout 600 mariadb-dump \
                --host="$MARIADB_HOST" \
                --user="$MARIADB_USER" \
                --password="$MARIADB_PASSWORD" \
                --single-transaction \
                --routines \
                --triggers \
                --lock-tables=false \
                --add-drop-table \
                --extended-insert \
                --quick \
                --compress \
                "$MARIADB_DB" | gzip > "$BACKUP_DIR/${BACKUP_PREFIX}_db_${TIMESTAMP}.sql.gz"
              
              # WordPress files backup - Database only for now to avoid volume conflicts
              echo "Backing up WordPress database only (files on persistent volume)"
              
              # Create backup manifest
              echo "Creating backup manifest..."
              cat > "$BACKUP_DIR/${BACKUP_PREFIX}_manifest_${TIMESTAMP}.txt" << EOF
              WordPress Backup Manifest
              Backup Date: $(date -Iseconds)
              Kubernetes Namespace: {{ .Release.Namespace }}
              WordPress Version: {{ .Values.wordpress.image.tag }}
              Database Host: $MARIADB_HOST
              Database Name: $MARIADB_DB
              
              Files:
              - ${BACKUP_PREFIX}_db_${TIMESTAMP}.sql.gz ($(stat -f%z "$BACKUP_DIR/${BACKUP_PREFIX}_db_${TIMESTAMP}.sql.gz" 2>/dev/null || stat -c%s "$BACKUP_DIR/${BACKUP_PREFIX}_db_${TIMESTAMP}.sql.gz") bytes)
              
              Note: WordPress files are stored on persistent volumes and automatically backed up by DigitalOcean.
              EOF
              
              # Cleanup old backups
              echo "Cleaning up old backups..."
              find "$BACKUP_DIR" -name "${BACKUP_PREFIX}_*" -mtime +$RETENTION_DAYS -delete
              
              # Log completion
              echo "Backup completed successfully at $(date)" | tee -a "$LOG_FILE"
              echo "Backup files created:"
              ls -lah "$BACKUP_DIR/${BACKUP_PREFIX}_"*"_${TIMESTAMP}."*
              
            env:
            - name: MARIADB_HOST
              value: {{ include "wordpress.databaseHost" . }}
            - name: MARIADB_USER
              value: {{ include "wordpress.databaseUser" . }}
            - name: MARIADB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "wordpress.secretName" . }}
                  key: mariadb-password
            - name: MARIADB_DB
              value: {{ include "wordpress.databaseName" . }}
            
            volumeMounts:
            - name: backup-storage
              mountPath: /var/backups/wordpress
            - name: backup-config
              mountPath: /etc/backup
            - name: tmp-dir
              mountPath: /tmp
            
            resources:
              limits:
                cpu: 200m
                memory: 256Mi
              requests:
                cpu: 50m
                memory: 128Mi
          
          volumes:
          - name: backup-storage
            persistentVolumeClaim:
              claimName: {{ include "wordpress.fullname" . }}-backup
          - name: backup-config
            configMap:
              name: {{ include "wordpress.fullname" . }}-config
              items:
              - key: backup-config.sh
                path: backup-config.sh
                mode: 0755
          - name: tmp-dir
            emptyDir:
              sizeLimit: 1Gi
---
# Backup Storage PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "wordpress.fullname" . }}-backup
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "wordpress.labels" . | nindent 4 }}
    app.kubernetes.io/component: backup
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.backup.storage.size }}
  {{- if .Values.backup.storage.storageClass }}
  storageClassName: {{ .Values.backup.storage.storageClass }}
  {{- end }}
{{- end }}
