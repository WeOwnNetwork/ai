# DigitalOcean-optimized NGINX Ingress Controller configuration
# This eliminates PROXY protocol issues and provides stable load balancer integration

controller:
  # Use DigitalOcean-specific service configuration
  service:
    type: LoadBalancer
    annotations:
      # Disable PROXY protocol to eliminate header issues
      service.beta.kubernetes.io/do-loadbalancer-enable-proxy-protocol: "false"
      # Use round-robin algorithm for better stability
      service.beta.kubernetes.io/do-loadbalancer-algorithm: "round_robin"
      # Set health check path for NGINX
      service.beta.kubernetes.io/do-loadbalancer-healthcheck-path: "/healthz"
      # Set health check port to match NGINX default
      service.beta.kubernetes.io/do-loadbalancer-healthcheck-port: "10254"
      # Disable sticky sessions for better load distribution
      service.beta.kubernetes.io/do-loadbalancer-sticky-sessions-type: "none"
    
  # Configure NGINX for DigitalOcean compatibility
  config:
    # Disable PROXY protocol support in NGINX
    use-proxy-protocol: "false"
    # Enable real IP forwarding for proper client IP detection
    use-forwarded-headers: "true"
    # Set proper upstream keepalive
    upstream-keepalive-connections: "50"
    # Configure SSL protocols
    ssl-protocols: "TLSv1.2 TLSv1.3"
    
  # Resource limits for stability
  resources:
    requests:
      cpu: 100m
      memory: 90Mi
    limits:
      cpu: 500m
      memory: 256Mi
      
  # Health check configuration
  livenessProbe:
    httpGet:
      path: /healthz
      port: 10254
    initialDelaySeconds: 10
    periodSeconds: 10
    
  readinessProbe:
    httpGet:
      path: /healthz
      port: 10254
    initialDelaySeconds: 10
    periodSeconds: 1
    
  # Replica configuration for high availability
  replicaCount: 1
  
  # Node selector for consistent placement
  nodeSelector:
    kubernetes.io/os: linux
